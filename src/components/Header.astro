---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE } from '../consts';
import Search from './Search.astro';
import Sidebar from './Sidebar.astro';
import { supabase } from "../lib/supabase";
let user = null;
---

<header style = "background-color : #fff4ec;">
	<nav >
		<div class="nav-left">
			<button class="menu-icon" id="menuIcon" aria-label="Toggle menu">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-menu"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg>
			</button>
			<a href="/" class="site-title">{SITE_TITLE}</a>
		</div>
		<div class="nav-right-group">
			<div class="nav-right">
				<Search />
				
			</div>
			<div id = "login">
				<a href="/login" class="login-button">Login</a>
			</div>
	</div>
	</nav>
</header>

<div class="overlay" id="sidebarOverlay"></div>
<Sidebar />

<style>
	:root {
		/* Define a CSS variable for header height */
		--header-height: 3em; /* Adjust this value based on your header's actual height */
	}

	header {
		margin: 0;
		padding: 0.5em 0.5em;
		background: white;
		box-shadow: 0 2px 8px rgba(var(--black), 5%);
		position: sticky;
		top: 0;
		z-index: 10000000;
		height: var(--header-height); /* Set header height using the variable */
		display: flex; /* Use flex to vertically center nav */
		align-items: center;
	}

	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		max-width: 1200px;
		margin: 0 auto;
		width: 100%; /* Ensure nav takes full width of header */
	}

	.nav-left {
		display: flex;
		align-items: center;
		gap: 1em;
	}

	.menu-icon {
		background: none;
		border: none;
		cursor: pointer;
		padding: 0.5em;
		display: flex;
		align-items: center;
		justify-content: center;
		color: rgb(var(--black));
	}

	.menu-icon:hover {
		color: var(--accent);
	}

	.site-title {
		font-size: 1.5em;
		font-weight: bold;
		text-decoration: none;
		color: rgb(var(--black));
	}

	.nav-right {
		display: flex;
		align-items: center;
		gap: 1em;
	}
	.login-button {
		font-size: 0.95em;
		text-decoration: none;   /* removes underline */
    	color: inherit; /* inherits color from parent */
		padding: 0.4em 1em;
	}
	/* Optionally, make the search input smaller */
	.nav-right input[type="search"],
	.nav-right .search-input {
		font-size: 0.95em;
		padding: 0.4em 0.8em;
	}

	/* Hide the middle nav links as they are now in the sidebar */
	.nav-middle {
		display: none;
	}
	.nav-right-group {
	display: flex;
	align-items: center;
	gap: 1em;
	margin-left: auto; /* Pushes it all the way to the right in the nav */
}

	/* Adjust main content when sidebar is open (optional, requires JS) */
	/* body.sidebar-open main {
		margin-left: 250px;
		transition: margin-left 0.3s ease-in-out;
	} */

	/* Responsive adjustments for the main header bar */
	@media (max-width: 768px) {
		header {
			padding: 0.5em 1em;
			--header-height: 3.5em; /* Adjust header height for smaller screens if needed */
		}

		.nav-left {
			gap: 0.5em;
		}

		.site-title {
			font-size: 0.2em;
		}
	}
</style>

<script is:inline>
	const menuIcon = document.getElementById('menuIcon');
	const sidebar = document.getElementById('sidebar');
	const overlay = document.getElementById('sidebarOverlay');
	const body = document.body;

	function toggleSidebar() {
		sidebar.classList.toggle('open');
		overlay.classList.toggle('visible');
		body.classList.toggle('sidebar-open');
	}

	menuIcon.addEventListener('click', toggleSidebar);
	overlay.addEventListener('click', toggleSidebar);

	window.addEventListener('resize', () => {
		if (window.innerWidth > 768 && sidebar.classList.contains('open')) {
			toggleSidebar();
		}
	});
</script>
<script>
(async () => {
    const res = await fetch("/api/auth/logged-in");
	console.log(res);

    if (res.ok) {
      replaceElement()
    } else {
		re_replaceElement()
	}
  })();

  function replaceElement() {
    const newElement = document.createElement('img');  // Create an <img> element
    newElement.src = "/assets_task_01jw77ts1xfxa9cbxf8r57zr1g_1748294820_img_2.jpg";
    newElement.alt = "Profile Icon";
	newElement.style = "width: 60px; height: 60px; border-radius: 50%; object-fit: cover;display: block;object-position: center top;"
    newElement.style.cursor = "pointer";
    newElement.onclick = () => {
      window.location.href = "/profile";
    }
	

    const loginElement = document.getElementById("login");
    if (loginElement) {
      loginElement.replaceWith(newElement);
    }
  }
  function re_replaceElement() {
    // 1. Create a new <a> element
    const newElement = document.createElement('a');
    
    // 2. Set its attributes
    newElement.href = '/login';
    newElement.className = 'login-button';
    
    // 3. Set its text
    newElement.textContent = 'Login';
    
    // 4. Find the old “login” placeholder and replace it
    const loginElement = document.getElementById('login');
    if (loginElement) {
      loginElement.replaceWith(newElement);
    }
  }
</script>