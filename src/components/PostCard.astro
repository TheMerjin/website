---
const { post } = Astro.props;
---

<article class="lw-post-card">
  <!-- Vote column -->
  <div class="lw-vote-column">
    <div class="lw-vote-count">{post.gratitude ?? 0}</div>
  </div>

  <!-- Main content -->
  <div class="lw-post-content">
    <a href={`posts/${post.id}`} class="lw-post-title">
      {post.title}
    </a>
    <div class="lw-post-meta">
      <a href={`/${post.username}`} class="lw-post-author">
        {post.username}
      </a>
      <span class="lw-dot">â€¢</span>
      <time datetime={post.created_at} class="lw-post-date">
        {new Date(post.created_at).toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' })}
      </time>
    </div>
  </div>
 

  <!-- Comment count -->
  <div class="lw-comments">
    <svg xmlns="http://www.w3.org/2000/svg" class="lw-comment-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
    </svg>
    <span>{post.comments_count ?? 0}</span>
  </div>
  <div class="lw-post-preview">
    <div class = "lw-post-title">
      {post.title}
    </div>
    <div class = "post-length">
      ({post.content.length} words)
    </div>
    {post.preview || post.content.slice(0, 300) + '...'}
  </div>
</article>

<style>
  .lw-post-title {
    font-size: 2rem;
    font-weight: 700;

  }
  .post-length {
    font-size: 0.7rem;
    color: #777;
    margin-bottom: 0.5rem;
  }
  .lw-post-preview {
  position: absolute;
  background: white;
  border: 1px solid #ccc;
  padding: 0.75rem 1rem;
  box-shadow: 0 3px 10px rgba(0,0,0,0.15);
  max-width: 355px;
  color: #444;
  font-size: 0.8rem;
  line-height: 1.2rem;
  border-radius: 6px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease-in-out;
  z-index: 100000000000000;
  top: 100%;
  left: 0;
  margin-left: calc(100% /1.9);
  margin-top: 0.4rem;
  white-space: normal;
  font-weight: 400;
}

/* Show preview when hovering over the post card */
.lw-post-card:hover .lw-post-preview,
.lw-post-card:focus-within .lw-post-preview {
  opacity: 1;
  pointer-events: auto;
}
  .lw-post-card {
    position: relative;
    display: grid;
    grid-template-columns: 40px 1fr auto;
    gap: 1rem;
    align-items: center;
    padding: 0.75rem 1rem;
    border-bottom: 1px solid #eee;
    background: #fff;
    transition: background-color 0.15s ease-in-out;
    font-family: 'Inter', sans-serif;
  }
  .lw-post-card:hover {
    background-color: #f9f9f9;
  }

  /* Vote column */
  .lw-vote-column {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #888;
  }
  .lw-vote-count {
    font-size: 0.95rem;
    font-weight: 600;
    color: #555;
  }

  /* Content */
  .lw-post-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .lw-post-title {
    font-size: 1rem;
    font-weight: 600;
    color: #222;
    text-decoration: none;
  }
  .lw-post-title:hover {
    color: #0a58ca;
  }
  .lw-post-meta {
    font-size: 0.8rem;
    color: #777;
    margin-top: 0.2rem;
    display: flex;
    align-items: center;
    gap: 0.3rem;
  }
  .lw-post-author {
    color: inherit;
    text-decoration: none;
    font-weight: 500;
  }
  .lw-dot {
    color: #aaa;
  }

  /* Comments */
  .lw-comments {
    display: flex;
    align-items: center;
    gap: 0.3rem;
    font-size: 0.85rem;
    color: #555;
  }
  .lw-comment-icon {
    width: 1rem;
    height: 1rem;
    color: #888;
  }

  /* Responsive */
  @media (max-width: 600px) {
    .lw-post-card {
      grid-template-columns: 30px 1fr auto;
      gap: 0.5rem;
    }
    .lw-post-title {
      font-size: 0.95rem;
    }
  }
</style>