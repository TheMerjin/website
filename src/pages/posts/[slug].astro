---
import WebsiteLayout from "../../layouts/WebsiteLayout.astro";
import { marked } from "marked";
import createDOMPurify from "dompurify";
import { JSDOM } from "jsdom";
import CommentsTree from "../../components/CommentsTree.jsx";
export const prerender = false// Adjust path if needed
const { slug } = Astro.params;
const res = await fetch(`${import.meta.env.PUBLIC_API_URL}api/auth/get_posts`);
const { posts } = await res.json();
let correctPost = null;
for (const post of posts) {
  if (post.id == slug){
    correctPost = post;
  } // do something with each post
}


// Setup DOMPurify with JSDOM (since Astro runs on server)
const window = new JSDOM("").window;
const DOMPurify = createDOMPurify(window);

// Convert markdown to HTML
const rawHtml = marked.parse(correctPost.content) as string;

// Sanitize HTML output
const safeHtml = DOMPurify.sanitize(rawHtml);

// Format date nicely
const date = new Date(correctPost.created_at).toLocaleDateString(undefined, {
  year: "numeric",
  month: "long",
  day: "numeric",
});
---
<WebsiteLayout>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- KaTeX CSS and auto-renderer -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css" />
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js"></script>
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/contrib/auto-render.min.js"
  onload="renderMathInElement(document.body, {
    delimiters: [
      {left: '$$', right: '$$', display: true},
      {left: '$', right: '$', display: false}
    ],
    throwOnError: false
  });"></script>
  </head>
  <article class="post">
    <h1 class="title">{correctPost.title}</h1>
    <div class="byline">By {correctPost.username} on {date}</div>
    <div class="content" set:html={safeHtml}></div>
  </article>
  <div>
    <CommentsTree slug={slug} client:load />
  </div>
</WebsiteLayout>

<style>
  .post {
    max-width: 800px;
    margin: 0rem auto;
    margin-left: 0rem;
    background-color: #fcfcfc;
    padding: 1.8rem 2rem;
    line-height: 1.7;
  }

  .title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    word-break: break-word;
  }

  .byline {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 2rem;
  }

  /* Markdown content styles */
  .content pre {
    background: #f6f6f6;
    padding: 1rem;
    overflow-x: auto;
    border-radius: 6px;
    margin: 1.5rem 0;
  }

  .content code {
  }

  .content h2, .content h3 {
    margin-top: 2rem;
  }

  .content p {
    margin: 1rem 0;
  }

  @media (max-width: 800px) {
    .post {
      max-width: 100vw;
      padding: 0 0.5rem;
    }
    .title {
      font-size: 2rem;
    }
  }

  @media (max-width: 500px) {
    .post {
      padding: 0 0.25rem;
    }
    .title {
      font-size: 1.3rem;
    }
    .byline {
      font-size: 0.8rem;
    }
  }
</style>