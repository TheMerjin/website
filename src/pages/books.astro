---
import BaseLayout from '../layouts/BaseLayout.astro';
import { supabase } from '../lib/client-supabase.js';

let booksCatalog = {};
let books = [];
let categories = [];
let booksByCategory = {};
let booksJson = '';
let booksByCategoryJson = '';
let error = null;

try {
  const { data, error: fetchError } = await supabase
    .storage
    .from('books')
    .download('books.json');
  if (data) {
    const text = await data.text();
    booksCatalog = JSON.parse(text);
    books = booksCatalog.books;
    booksJson = JSON.stringify(books);
    categories = Array.from(new Set(books.map((b) => b.category)));
    booksByCategory = {};
    categories.forEach(cat => {
      booksByCategory[cat] = books.filter((b) => b.category === cat);
    });
    booksByCategoryJson = JSON.stringify(booksByCategory);
  } else {
    error = fetchError?.message || 'Failed to fetch books catalog';
  }
} catch (e) {
  error = e.message;
}
---

<BaseLayout title="Book Recommendations">
  <main class="rts-bg min-h-screen flex flex-col items-center px-4 py-12">
    <header class="mb-10 max-w-2xl w-full">
      <h1 class="text-4xl font-bold text-gray-900 mb-2 font-serif">Book Recommendations</h1>
      <p class="text-lg text-gray-600 leading-relaxed mb-4">
        A curated collection of timeless literature and thought-provoking works. Browse and read directly in your browser.
        You can check by section or by all books. Feel free to provide any feedback or suggestions.
      </p>
    </header>
    {error ? (
      <div class="text-red-600 font-bold">{error}</div>
    ) : (
      <>
      <!-- Categories Section -->
      <section class="w-full max-w-2xl mb-12">
        <h2 class="text-2xl font-bold mb-6 font-serif">Categories</h2>
        <div id="categories-list" class="space-y-10">
          {categories.map((cat) => (
            <div class="category-block" data-category={cat}>
              <a href={`/books/${cat}`} class="category-link no-underline">
                <h3 class="text-xl font-semibold text-black font-serif mb-3 capitalize category-title">{cat}</h3>
              </a>
              <ul class="space-y-4 category-books-list">
                {booksByCategory[cat].slice(0, 5).map((book) => (
                  <li class="bg-white rounded-lg px-6 py-4 border border-gray-100 hover:shadow transition-shadow">
                    <a href={`/books/read/${book.id}`} class="block group no-underline">
                      <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2">
                        <div>
                          <h4 class="text-lg font-semibold text-black font-serif mb-1 book-title">
                            <a href={`/books/read/${book.id}`} class="book-title-link">{book.title}</a>
                          </h4>
                          <div class="text-sm text-black mb-1">{book.author}</div>
                          <div class="text-xs text-gray-400 mb-1">{book.year}</div>
                          <div class="text-sm text-black italic">{book.description}</div>
                        </div>
                      </div>
                    </a>
                  </li>
                ))}
              </ul>
              {booksByCategory[cat].length > 5 && (
                <div class="flex justify-center mt-4">
                  <button class="rts-btn load-more-category" data-category={cat}>Load More</button>
                </div>
              )}
            </div>
          ))}
        </div>
      </section>

      <!-- All Books Section -->
      <section class="w-full max-w-2xl">
        <h2 class="text-2xl font-bold mb-6 font-serif">All Books</h2>
        <ul id="book-list" class="space-y-6">
          {books.map((book) => (
            <li class="bg-white rounded-lg px-6 py-5 border border-gray-100 hover:shadow transition-shadow">
              <a href={`/books/read/${book.id}`} class="block group no-underline">
                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2">
                  <div>
                    <h2 class="text-xl font-semibold text-black font-serif mb-1 book-title">
                      <a href={`/books/read/${book.id}`} class="book-title-link">{book.title}</a>
                    </h2>
                    <div class="text-sm text-gray-700 mb-1">{book.author}</div>
                    <div class="text-xs text-gray-400 mb-1">{book.year}</div>
                    <div class="text-sm text-gray-500 italic">{book.description}</div>
                  </div>
                  <div class="flex-shrink-0 mt-2 md:mt-0">
                    <span class="inline-block bg-gray-100 text-gray-600 text-xs px-3 py-1 rounded-full">{book.category}</span>
                  </div>
                </div>
              </a>
            </li>
          ))}
        </ul>
      </section>
      </>
    )}
  </main>

  <script type="module">
    // Remove all books load more logic
    const booksByCategory = {booksByCategoryJson};
    const categories = Object.keys(booksByCategory);
    categories.forEach(cat => {
      let loadedCat = 5;
      const block = document.querySelector(`.category-block[data-category="${cat}"]`);
      if (!block) return;
      const list = block.querySelector('.category-books-list');
      const btn = block.querySelector('.load-more-category');
      if (btn) {
        btn.addEventListener('click', () => {
          const next = booksByCategory[cat].slice(loadedCat, loadedCat + 5);
          next.forEach(book => {
            const li = document.createElement('li');
            li.className = 'bg-white rounded-lg px-6 py-4 border border-gray-100 hover:shadow transition-shadow';
            li.innerHTML = `
              <a href="/books/read/${book.id}" class="block group no-underline">
                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-2">
                  <div>
                    <h4 class="text-lg font-semibold text-black font-serif mb-1 book-title">
                      <a href="/books/read/${book.id}" class="book-title-link">${book.title}</a>
                    </h4>
                    <div class="text-sm text-gray-700 mb-1">${book.author}</div>
                    <div class="text-xs text-gray-400 mb-1">${book.year}</div>
                    <div class="text-sm text-gray-500 italic">${book.description}</div>
                  </div>
                </div>
              </a>
            `;
            list.appendChild(li);
          });
          loadedCat += 5;
          if (loadedCat >= booksByCategory[cat].length) {
            btn.style.display = 'none';
          }
        });
      }
    });
  </script>

  <style>
    .rts-bg {
      background: #f8f9fa;
      min-height: 100vh;
    }
    .rts-btn {
      background: #f3f4f6;
      border: 1px solid #e5e7eb;
      border-radius: 0.5rem;
      padding: 0.5rem 1.5rem;
      font-size: 1rem;
      color: #374151;
      cursor: pointer;
      transition: background 0.15s, border 0.15s;
    }
    .rts-btn:hover {
      background: #e0e7ef;
      border-color: #cbd5e1;
    }
    .font-serif {
      font-family: 'Merriweather', 'Georgia', serif;
    }
    a.no-underline {
      text-decoration: none !important;
    }
    .book-title-link {
      color: #000;
      text-decoration: none;
      transition: color 0.15s;
    }
    .book-title-link:hover {
      color: #6b7280;
      text-decoration: underline;
    }
    .book-title {
      margin-bottom: 0.5rem;
    }
    .group:hover .book-title {
      color: #6b7280 !important;
    }
    .category-link:hover .category-title {
      color: #6b7280;
      text-decoration: underline;
    }
    .category-title {
      color: #000;
      transition: color 0.15s;
    }
  </style>
</BaseLayout>