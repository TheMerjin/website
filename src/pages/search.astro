---
// pages/search.astro
import PostCard from '../components/PostCard.jsx';
import WebsiteLayout from '../layouts/WebsiteLayout.astro';
import SearchResults from '../components/SearchResults.jsx';

// Extract query parameters
const url = new URL(Astro.request.url);
const query = url.searchParams.get('q') || '';
const limit = url.searchParams.get('limit') || '100';

// If there's a query, perform search
let searchResults = [];
if (query) {
  try {
    const res = await fetch(`${import.meta.env.PUBLIC_API_URL}api/auth/search_similar`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ query, limit: parseInt(limit) }),
    });
    const data = await res.json();
    searchResults = data.postData || [];
  } catch (error) {
    console.error('Search error:', error);
  }
}

// Get all posts for initial display (when no search query)
const res = await fetch(`${import.meta.env.PUBLIC_API_URL}api/auth/get_posts`);
const { posts } = await res.json();

// Get initial query and results on the server
let initialResults = [];
if (query) {
  const res = await fetch(`${import.meta.env.PUBLIC_API_URL}api/auth/search_similar`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ query, limit: 100 }),
  });
  const data = await res.json();
  initialResults = data.postData || [];
}
---
<WebsiteLayout>
<div class="search-container">
  {/* Filters Section */}
  <div class="filters-section">
    <h2 class="filters-title">Filters</h2>

    {/* Filter by posted date */}
    <div class="filter-group">
      <div class="filter-label">Filter by posted date</div>
      <div class="radio-group">
        <label class="radio-label">
          <input type="radio" name="post_date" value="all" checked /> All
        </label>
        <label class="radio-label">
          <input type="radio" name="post_date" value="24h" /> Past 24 hours
        </label>
        <label class="radio-label">
          <input type="radio" name="post_date" value="week" /> Past week
        </label>
        <label class="radio-label">
          <input type="radio" name="post_date" value="month" /> Past month
        </label>
        <label class="radio-label">
          <input type="radio" name="post_date" value="year" /> Past year
        </label>
      </div>
    </div>

    {/* Filter by wikilags */}
    <div class="filter-group">
      <input
        type="text"
        placeholder="Filter by wikilags"
        class="filter-input"
      />
    </div>

    {/* Checkboxes */}
    <div class="filter-group">
      <label class="checkbox-label">
        <input type="checkbox" /> Curated
      </label>
      <label class="checkbox-label">
        <input type="checkbox" checked /> Exclude events
      </label>
    </div>

    <button class="clear-filters-btn">
      Clear all filters
    </button>
  </div>

  {/* Search Results Section (hydrated React) */}
  <div class="results-section">
    <SearchResults initialResults={initialResults} initialQuery={query} client:load />
  </div>
</div>

<style>
  .search-container {
    display: flex;
    flex-direction: column;
    margin: 20px auto;
    max-width: 1200px;
    padding: 0 20px;
    gap: 20px;
  }

  .filters-section {
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 0;
    padding: 20px;
    font-family: 'Inter', Helvetica, Arial, sans-serif;
  }

  .filters-title {
    font-size: 1.02rem;
    font-weight: 600;
    color: #232323;
    margin: 0 0 20px 0;
    border: none;
  }

  .filter-group {
    margin-bottom: 20px;
  }

  .filter-label {
    font-weight: 600;
    margin-bottom: 10px;
    color: #1a1a1a;
    font-size: 0.95rem;
  }

  .radio-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .radio-label, .checkbox-label {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.95rem;
    color: #1a1a1a;
    cursor: pointer;
  }

  .filter-input {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 0;
    outline: none;
    font-family: inherit;
    font-size: 0.95rem;
    background: #fff;
    color: #1a1a1a;
  }

  .filter-input:focus {
    outline: 2px solid #2b6cb0;
    border-color: #2b6cb0;
  }

  .clear-filters-btn {
    background: none;
    border: none;
    color: #2b6cb0;
    cursor: pointer;
    padding: 0;
    font-size: 0.9rem;
    font-family: inherit;
    text-decoration: underline;
  }

  .clear-filters-btn:hover {
    color: #232323;
  }

  .results-section {
    flex: 1;
  }

  /* Desktop layout */
  @media (min-width: 768px) {
    .search-container {
      flex-direction: row;
      align-items: flex-start;
    }

    .filters-section {
      flex: 0 0 250px;
      margin-right: 40px;
      position: sticky;
      top: 20px;
    }

    .results-section {
      flex: 1;
    }
  }

  /* Mobile optimizations */
  @media (max-width: 767px) {
    .search-container {
      padding: 0 10px;
      margin: 10px auto;
    }

    .filters-section {
      padding: 15px;
    }

    .filters-title {
      font-size: 1rem;
      margin-bottom: 15px;
    }

    .filter-group {
      margin-bottom: 15px;
    }

    .radio-group {
      gap: 6px;
    }

    .radio-label, .checkbox-label {
      font-size: 0.9rem;
    }

    .filter-input {
      padding: 6px;
      font-size: 0.9rem;
    }
  }

  .search-post-card {
    margin: 0 auto;
    max-width: 900px;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 0;
    background: #fff;
    border: 1px solid #ddd;
    transition: background 0.15s;
    cursor: pointer;
    position: relative;
    box-shadow: none;
  }

  .search-post-card:hover {
    background: #f9f9f9;
  }

  .search-post-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 12px;
    line-height: 1.3;
    font-family: 'Inter', Helvetica, Arial, sans-serif;
  }

  .search-post-title a {
    text-decoration: none;
    color: #1a1a1a;
    transition: color 0.15s;
  }

  .search-post-title a:hover {
    color: #666;
  }

  .search-post-meta {
    font-size: 0.95rem;
    color: #666;
    margin-bottom: 15px;
    font-weight: 500;
    font-family: 'Inter', Helvetica, Arial, sans-serif;
  }

  .search-post-content {
    font-size: 1rem;
    line-height: 1.6;
    color: #1a1a1a;
    margin-bottom: 0;
    word-break: break-word;
    font-family: Georgia, serif;
  }

  /* Mobile post card adjustments */
  @media (max-width: 767px) {
    .search-post-card {
      padding: 15px;
      margin-bottom: 15px;
    }

    .search-post-title {
      font-size: 1.1rem;
      margin-bottom: 10px;
    }

    .search-post-meta {
      font-size: 0.9rem;
      margin-bottom: 12px;
    }

    .search-post-content {
      font-size: 0.95rem;
      line-height: 1.5;
    }
  }
</style>
</WebsiteLayout>